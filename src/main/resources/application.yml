# common(dev, prod)
server:
  port: 8080
  shutdown: graceful

# secret: base64 encoding value
jwt:
  header: Authorization
  secret: ${{ secrets.SAGO_USER_JWT_SECRET }}
  token-validity-in-seconds: 1800

logging:
  config: classpath:log4j2.xml

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${{ secrets.SAGO_USER_EMAIL_ACCOUNT }}
    password: ${{ secrets.SAGO_USER_EMAIL_PASSWORD }}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    protocol: smtp

  # Quartz Scheduler 설정
  quartz:
    jdbc:
      initialize-schema: always
    job-store-type: jdbc
    scheduler-name: Sago_Batch_Scheduler
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            clusterCheckinInterval: 1000
            isClustered: true
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 3
            threadsInheritContextClassLoaderOfInitializingThread: true
    overwrite-existing-jobs: true

  lifecycle:
    timeout-per-shutdown-phase: 100s

  profiles:
    active: dev

---
# dev setting
spring:
  config:
    activate:
      on-profile: dev

  redis:
    host: localhost
    port: 6379

app:
  datasource:
    mysql:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/sago?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      username: root
      password: devDB

---
# prod setting
spring:
  config:
    activate:
      on-profile: prod

  redis:
    master:
      host: server.sagogaja.com
      port: 6379

app:
  datasource:
    master:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://server.sagogaja.com:3306/sago?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      username: root
      password:
